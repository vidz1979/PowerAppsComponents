Screen1 As screen:

    InputHelpers1 As InputHelperFunctions:
        ApplyMask: |
            =With(
                {
                    // starts with an masked empty result
                    strResult: Substitute(ParamMask, "0", " "),
                    // extract only digits from input
                    strInputDigits: Concat(MatchAll(ParamInput, "\d"), FullMatch),
                    // find all digits groups from mask, ex: 000-0000-00000 --> ['000', '0000', '00000']
                    arrMatches: MatchAll(ParamMask, "\d+")
                },
                TrimEnds(Concat(
                    ForAll(
                        // for each group
                        Sequence(CountRows(arrMatches)),
                        With(
                            {
                                // current group
                                objCurrMatch: Index(arrMatches, Value),
                                // which position of "only digits input" is the current group
                                intOnlyDigitsPosition: Len(
                                    Concat(
                                        ForAll(
                                            Sequence(Value - 1),
                                            Index(arrMatches, Value).FullMatch
                                        ), 
                                        Value
                                    )
                                ) + 1,
                                // last position put in result (without mask characters)
                                intLastPosition: If(
                                    Value > 1,
                                    Index(arrMatches, Value - 1).StartMatch + Len(Index(arrMatches, Value - 1).FullMatch), 
                                    1
                                )
                            },
                            If(
                                // if input is complete until current group, replace in result using mask
                                intOnlyDigitsPosition <= Len(strInputDigits),
                                Mid(
                                    Replace(
                                        // replace the current group in mask
                                        strResult,
                                        objCurrMatch.StartMatch,
                                        Len(objCurrMatch.FullMatch),
                                        Mid(
                                            strInputDigits, 
                                            intOnlyDigitsPosition, 
                                            Len(objCurrMatch.FullMatch)
                                        ) & "                  "
                                    ),
                                    intLastPosition,
                                    objCurrMatch.StartMatch - intLastPosition + Len(objCurrMatch.FullMatch)
                                ),
                                // if input is not complete, do not output the mask extra characters
                                ""
                            )
                        )
                    ),
                    Value
                ))
            )
        FormataCNPJ: =Self.ApplyMask(ParamInput, "00.000.000/0000-00")
        FormataCPF: =Self.ApplyMask(ParamInput, "000.000.000-00")
        ValidaCNPJ: |-
            =With(
                {
                    // extrai somente numeros do input
                    strDigits: Concat(MatchAll(ParamCNPJ, "\d"), FullMatch)    
                },
                With(
                    {
                        // calcula 1o digito do CNPJ
                        intDigito1_0: Mod(
                            Mid(strDigits, 1, 1) * 5 
                            + Mid(strDigits, 2, 1) * 4 
                            + Mid(strDigits, 3, 1) * 3 
                            + Mid(strDigits, 4, 1) * 2 
                            + Mid(strDigits, 5, 1) * 9 
                            + Mid(strDigits, 6, 1) * 8 
                            + Mid(strDigits, 7, 1) * 7 
                            + Mid(strDigits, 8, 1) * 6 
                            + Mid(strDigits, 9, 1) * 5 
                            + Mid(strDigits, 10, 1) * 4 
                            + Mid(strDigits, 11, 1) * 3 
                            + Mid(strDigits, 12, 1) * 2, 
                            11
                        ),
                        // calcula 2o digito do CNPJ
                        intDigito2_0: Mod(
                            Mid(strDigits, 1, 1) * 6 
                            + Mid(strDigits, 2, 1) * 5 
                            + Mid(strDigits, 3, 1) * 4 
                            + Mid(strDigits, 4, 1) * 3 
                            + Mid(strDigits, 5, 1) * 2 
                            + Mid(strDigits, 6, 1) * 9 
                            + Mid(strDigits, 7, 1) * 8 
                            + Mid(strDigits, 8, 1) * 7 
                            + Mid(strDigits, 9, 1) * 6 
                            + Mid(strDigits, 10, 1) * 5 
                            + Mid(strDigits, 11, 1) * 4 
                            + Mid(strDigits, 12, 1) * 3 
                            + Mid(strDigits, 13, 1) * 2, 
                            11
                        )
                    },
                    With(
                        {
                            intDigito1: If(intDigito1_0 < 2, 0, 11 - intDigito1_0),
                            intDigito2: If(intDigito2_0 < 2, 0, 11 - intDigito2_0)
                        },
                        Len(strDigits) = 14
                            And intDigito1 = Value(Mid(strDigits, 13, 1)) 
                            And intDigito2 = Value(Mid(strDigits, 14, 1))
                    )
                )
            )
        ValidaCPF: |-
            =With(
                {
                    // extrai somente numeros do input
                    strDigits: Concat(MatchAll(ParamCPF, "\d"), FullMatch)    
                },
                With(
                    {
                        // calcula 1o digito do CPF
                        intDigito1_0: Mod(
                            (Mid(strDigits, 1, 1) * 10 
                            + Mid(strDigits, 2, 1) * 9 
                            + Mid(strDigits, 3, 1) * 8 
                            + Mid(strDigits, 4, 1) * 7 
                            + Mid(strDigits, 5, 1) * 6 
                            + Mid(strDigits, 6, 1) * 5 
                            + Mid(strDigits, 7, 1) * 4 
                            + Mid(strDigits, 8, 1) * 3 
                            + Mid(strDigits, 9, 1) * 2) * 10, 
                            11
                        ),
                        // calcula 2o digito do CPF
                        intDigito2_0: Mod(
                            (Mid(strDigits, 1, 1) * 11 
                            + Mid(strDigits, 2, 1) * 10 
                            + Mid(strDigits, 3, 1) * 9 
                            + Mid(strDigits, 4, 1) * 8 
                            + Mid(strDigits, 5, 1) * 7 
                            + Mid(strDigits, 6, 1) * 6 
                            + Mid(strDigits, 7, 1) * 5 
                            + Mid(strDigits, 8, 1) * 4 
                            + Mid(strDigits, 9, 1) * 3 
                            + Mid(strDigits, 10, 1) * 2) * 10, 
                            11
                        )
                    },
                    With(
                        {
                            intDigito1: If(intDigito1_0 = 10, 0, intDigito1_0),
                            intDigito2: If(intDigito2_0 = 10, 0, intDigito2_0)
                        },
                        Len(strDigits) = 11
                            And intDigito1 = Value(Mid(strDigits, 10, 1)) 
                            And intDigito2 = Value(Mid(strDigits, 11, 1))
                    )
                )
            )

    GroupTelefone As group:
        Height: =5
        Width: =5
        X: =20
        Y: =20
        ZIndex: =11

        InputTelefone As text:
            Default: =StrTelefone
            Height: =70
            Size: =21
            Width: =560
            X: =40
            Y: =579
            ZIndex: =8

        SliderTelefone As slider:
            Default: =Len(InputTelefone.Text)
            Height: =0
            OnChange: |-
                =Set(StrTelefone, InputHelpers1.ApplyMask(InputTelefone.Text, "00 00000-0000"));
                Reset(InputTelefone);
            Visible: =false
            Width: =0
            X: =40
            Y: =649
            ZIndex: =9

        Label2_1 As label:
            Height: =48
            Size: =21
            Text: ="Telefone"
            Width: =560
            X: =40
            Y: =531
            ZIndex: =10

    GroupCPF As group:
        Height: =5
        Width: =5
        X: =80
        Y: =80
        ZIndex: =12

        InputCPF As text:
            BorderColor: =If(IsBlank(StrCPF) Or InputHelpers1.ValidaCPF(StrCPF) Or Not MostraValidacaoCPF, RGBA(0, 18, 107, 1), RGBA(255, 0, 0, 1))
            Default: =StrCPF
            Height: =70
            OnChange: =Set(MostraValidacaoCPF, true)
            Size: =21
            Tooltip: =If(IsBlank(StrCPF) Or InputHelpers1.ValidaCPF(StrCPF) Or Not MostraValidacaoCPF, "", "CPF invÃ¡lido")
            Width: =560
            X: =40
            Y: =419
            ZIndex: =5

        SliderCPF As slider:
            Default: =Len(InputCPF.Text)
            Height: =0
            OnChange: |-
                =Set(StrCPF, InputHelpers1.FormataCPF(InputCPF.Text));
                Reset(InputCPF);
            Visible: =false
            Width: =0
            X: =40
            Y: =489
            ZIndex: =6

        Label2 As label:
            Height: =48
            Size: =21
            Text: ="CPF"
            Width: =560
            X: =40
            Y: =371
            ZIndex: =7

        LabelErroCPF As label:
            Align: =Align.Right
            Color: =RGBA(255, 0, 0, 1)
            Height: =44
            Size: =16
            Text: =If(IsBlank(StrCPF) Or InputHelpers1.ValidaCPF(StrCPF) Or Not MostraValidacaoCPF, "", "CPF invÃ¡lido")
            Width: =560
            X: =40
            Y: =487
            ZIndex: =11

    Button2 As button:
        Height: =70
        OnSelect: |-
            =Set(MostraValidacaoCNPJ, false);
            Set(MostraValidacaoCPF, false);
            Set(StrCNPJ, "");
            Set(StrCPF, "");
            Set(StrTelefone, "");
            Reset(InputCNPJ);
            Reset(InputCPF);
            Reset(InputTelefone);
            Reset(MaskedInput_1);
        Size: =24
        Text: ="Limpar"
        Width: =560
        X: =40
        Y: =1030
        ZIndex: =16

    GroupCNPJ As group:
        Height: =5
        Width: =5
        X: =20
        Y: =20
        ZIndex: =16

        InputCNPJ As text:
            BorderColor: =If(IsBlank(StrCNPJ) Or InputHelpers1.ValidaCNPJ(StrCNPJ) Or Not MostraValidacaoCNPJ, RGBA(0, 18, 107, 1), RGBA(255, 0, 0, 1))
            Default: =StrCNPJ
            Height: =70
            OnChange: =Set(MostraValidacaoCNPJ, true)
            Size: =21
            Tooltip: =If(IsBlank(StrCPF) Or InputHelpers1.ValidaCPF(StrCPF) Or Not MostraValidacaoCPF, "", "CPF invÃ¡lido")
            Width: =560
            X: =40
            Y: =259
            ZIndex: =12

        SliderCNPJ As slider:
            Default: =Len(InputCNPJ.Text)
            Height: =0
            OnChange: |-
                =Set(StrCNPJ, InputHelpers1.FormataCNPJ(InputCNPJ.Text));
                Reset(InputCNPJ);
            Visible: =false
            Width: =0
            X: =40
            Y: =329
            ZIndex: =13

        Label2_2 As label:
            Height: =48
            Size: =21
            Text: ="CNPJ"
            Width: =560
            X: =40
            Y: =211
            ZIndex: =14

        LabelErroCNPJ As label:
            Align: =Align.Right
            Color: =RGBA(255, 0, 0, 1)
            Height: =44
            Size: =16
            Text: =If(IsBlank(StrCNPJ) Or InputHelpers1.ValidaCNPJ(StrCNPJ) Or Not MostraValidacaoCNPJ, "", "CNPJ invÃ¡lido")
            Width: =560
            X: =40
            Y: =327
            ZIndex: =15

    Label3 As label:
        Height: =70
        Size: =21
        Text: |-
            ="Exemplo CNPJ vÃ¡lido: 84.534.296/0001-10"
        Width: =560
        X: =40
        Y: =820
        ZIndex: =17

    Label3_1 As label:
        Height: =70
        Size: =21
        Text: |-
            ="Exemplo CPF vÃ¡lido: 608.524.797-43"
        Width: =560
        X: =40
        Y: =890
        ZIndex: =18

    Label3_2 As label:
        Align: =Align.Center
        Color: =RGBA(255, 255, 255, 1)
        Fill: =RGBA(56, 96, 178, 1)
        FontWeight: =FontWeight.Bold
        Height: =164
        PaddingBottom: =20
        PaddingLeft: =20
        PaddingRight: =20
        PaddingTop: =20
        Size: =30
        Text: ="FunÃ§Ãµes de ValidaÃ§Ã£o e MÃ¡scara"
        Width: =640
        ZIndex: =19

    MaskedInput_1 As MaskedInput:
        Height: =72
        MaskFunction: =InputHelpers1.ApplyMask(ParamInput, "00000-000")
        Width: =560
        X: =40
        Y: =698
        ZIndex: =20

